BUILD THE DOCKER IMAGES-  `docker-compose build`

TO VIEW THE IMAGES  -  `docker images`

RUN THE DOCKER CONTAINER  -  `docker run -p 5000:5000 --name simple-server-instance -e SERVER_ID="1" simple-server`

CONFIRM ITS RUNNING - `docker ps`

TEST THE END POINT - `http://localhost:5000/home`


TASK 2: CONSISTENT HASHING

BUILD THE LOAD BALANCER - `docker-compose up load_balancer`

CONFIRM ITS RUNNING - `docker-compose ps`

TESTING ON BROWSER: `http://172.27.0.5:5000/rep`



TASK 3 LOAD BALANCER

TEST ADD ON TERMINAL curl -X POST -H "Content-Type: application/json" -d '{"n": 2, "hostnames": ["S5", "S4"]}' http://172.27.0.5:5000/add

TO DELETE `curl -X DELETE -H "Content-Type: application/json" -d '{"n": 2, "hostnames": ["S5"]}' http://172.27.0.5:5000/rm

TASK 3:ANALYSIS

TEST A1: 'python3 A1.py'
TEST A2: 'python3 A2.py'
TEST A3: 
    check servers: 'docker ps'|'curl http://172.27.0.5:5000/rep'
    stop one server eg: 'docker stop Server1 && docker rm Server 1'
    periodically check servers again: 'docker ps'|'curl http://172.27.0.5:5000/rep'











VIEW THE LOGS AND DOCKER COMPOSE

docker-compose logs server
docker-compose logs load_balancer
docker-compose down
docker-compose up --build --scale server=3
TO REMOVE THE IMAGE - docker rmi simple-server
RUN THE DOCKER CONTAINER  -  docker run -p 5000:5000 --name simple-server-instance -e SERVER_ID="1" simple-server
TO REMOVE THE DOCKER CONTAINER - docker rm simple-server-instance
TO STOP THE CONTAINNER - docker stop simple-server-instance
TO START THE DOCKER - docker-compose up
TO REMOVE EVERYHTING docker system prune -a --volumes -f
STOP AND REMOVE ALL CONTAINERS   docker stop $(docker ps -aq) && docker rm $(docker ps -aq)
STOP AND REMOVE ALL IMAGES  docker rmi $(docker images -q) --force
REMOVE ALL VOLUMES   docker volume rm $(docker volume ls -q) --force
